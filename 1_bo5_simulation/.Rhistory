if(!require(ggplot2))
install.packages("ggplot2")
require("ggplot2")
if(!require(ggthemes))
install.packages("ggthemes")
require("ggthemes")
##### Define the funciont to simulate a series of game
game_sim <- function (num_of_games, team_win_rate, best_of){
#for example, you have to win 3 games to win a bo5
win_point <- (best_of + 1) / 2
probability <- rep(0, num_of_games)
index <- seq(1,5000)
for (i in 1:num_of_games){
num_victory <- 0
for (j in 1:i){
result <- sum(rbinom(best_of, 1, team_win_rate))
# if the team wins more than 3 games, then we record it as a
# victory of the bo5 series
if (result >= win_point){
num_victory = num_victory + 1
}
probability[i] <- num_victory / i
}
}
df <- data.frame(index,  probability)
return(df)
}
sim1 <- game_sim(10000, 0.7, 5)
sim2 <- game_sim(10000, 0.7, 3)
sim1
sim2
if(!require(ggplot2))
install.packages("ggplot2")
require("ggplot2")
if(!require(ggthemes))
install.packages("ggthemes")
require("ggthemes")
#Simulation Approach
##### Define the funciont to simulate a series of game
game_sim <- function (num_of_games, team_win_rate, best_of){
#for example, you have to win 3 games to win a bo5
win_point <- (best_of + 1) / 2
probability <- rep(0, num_of_games)
index <- seq(1,5000)
for (i in 1:num_of_games){
num_victory <- 0
for (j in 1:i){
result <- sum(rbinom(best_of, 1, team_win_rate))
# if the team wins more than 3 games, then we record it as a
# victory of the bo5 series
if (result >= win_point){
num_victory = num_victory + 1
}
probability[i] <- num_victory / i
}
}
df <- data.frame(index,  probability)
return(df)
}
# A simulation of a bo3 with winning probability of 70%
bo3_sim <- game_sim(10000, 0.7, 3)
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = sim1)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo3_plot
bo3_plot
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = sim1)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo3_plot
bo5_plot_2 <- ggplot(data = bo5_sim_2, aes(x = index, y = sim1)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated")
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = sim1)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated")
bo3_plot
bo3_sim
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated")
bo3_plot
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo3_plot
if(!require(ggplot2))
install.packages("ggplot2")
require("ggplot2")
if(!require(ggthemes))
install.packages("ggthemes")
require("ggthemes")
#Simulation Approach
##### Define the funciont to simulate a series of game
game_sim <- function (num_of_games, team_win_rate, best_of){
#for example, you have to win 3 games to win a bo5
win_point <- (best_of + 1) / 2
probability <- rep(0, num_of_games)
index <- seq(1,5000)
for (i in 1:num_of_games){
num_victory <- 0
for (j in 1:i){
result <- sum(rbinom(best_of, 1, team_win_rate))
# if the team wins more than 3 games, then we record it as a
# victory of the bo5 series
if (result >= win_point){
num_victory = num_victory + 1
}
probability[i] <- num_victory / i
}
}
df <- data.frame(index,  probability)
return(df)
}
# A simulation of a bo3 with winning probability of 70%
bo3_sim <- game_sim(5000, 0.7, 3)
bo3_plot <- ggplot(data = bo3_sim, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo3_plot
# A simulation of a bo5 with winning probability of 70%
bo5_sim <- game_sim(5000, 0.7, 5)
bo5_plot <- ggplot(data = bo5_sim, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo5_plot
# A simulation of a bo3 with winning probability of 55%
bo3_sim_2 <- game_sim(5000, 0.55, 3)
bo3_plot_2 <- ggplot(data = bo3_sim_2, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo3_plot_2
# A simulation of a bo5 with winning probability of 55%
bo5_sim_2 <- game_sim(5000, 0.55, 5)
bo5_plot_2 <- ggplot(data = bo5_sim_2, aes(x = index, y = probability)) +
geom_line() +
labs(title="Probability VS Number of Games",
y ="Probability of Victory", x = "Number of Games Simulated") +
theme_minimal()
bo5_plot_2
bo3_vic_prob_1 <- 1 - (choose(3,0) * 0.7^0 * 0.3^3 + choose(3,1) * 0.7^1 * 0.3^2)
bo5_vic_prob_1 <- 1 - (choose(5,0) * 0.7^0 * 0.3^5 + choose(5,1) * 0.7^1 * 0.3^4 + choose(5,2) * 0.7^2 * 0.3^3)
bo3_vic_prob_2 <- 1 - (choose(3,0) * 0.55^0 * 0.45^3 + choose(3,1) * 0.55^1 * 0.45^2)
bo5_vic_prob_2 <- 1 - (choose(5,0) * 0.55^0 * 0.45^5 + choose(5,1) * 0.55^1 * 0.45^4 + choose(5,2) * 0.55^2 * 0.45^3)
